// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"github.com/go-kratos/kratos/v2/registry"
	"kratos-project/app/http_admin/internal/biz"
	"kratos-project/app/http_admin/internal/conf"
	"kratos-project/app/http_admin/internal/data"
	"kratos-project/app/http_admin/internal/server"
	"kratos-project/app/http_admin/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, auth *conf.Auth, confData *conf.Data, confRegistry *conf.Registry, logger log.Logger, registrar registry.Registrar) (*kratos.App, func(), error) {
	discovery := data.NewDiscovery(confRegistry)
	userClient := data.NewUserRpcClient(discovery)
	dataData, cleanup, err := data.NewData(confData, logger, userClient)
	if err != nil {
		return nil, nil, err
	}
	userRepo := data.NewUserRpcRepo(dataData, logger)
	userUsecase := biz.NewUserUsecase(userRepo, auth, logger)
	userService := service.NewUserService(userUsecase)
	httpServer := server.NewHTTPServer(confServer, auth, userService, logger)
	app := newApp(logger, httpServer, registrar)
	return app, func() {
		cleanup()
	}, nil
}
