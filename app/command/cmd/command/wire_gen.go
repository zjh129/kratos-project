// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2/log"
	"github.com/spf13/cobra"
	"kratos-project/app/command/internal/biz"
	"kratos-project/app/command/internal/conf"
	"kratos-project/app/command/internal/data"
	"kratos-project/app/command/internal/server"
	"kratos-project/app/command/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confData *conf.Data, registry *conf.Registry, command *cobra.Command, logger log.Logger) (*server.CommandServer, func(), error) {
	discovery := data.NewDiscovery(registry)
	userClient := data.NewUserRpcClient(discovery)
	dataData, cleanup, err := data.NewData(confData, logger, userClient)
	if err != nil {
		return nil, nil, err
	}
	userRepo := data.NewUserRpcRepo(dataData, logger)
	userUseCase := biz.NewUserUseCase(userRepo, logger)
	demoService := service.NewDemoService(logger, command, userUseCase)
	commandService := service.NewCommandService(demoService)
	commandServer := server.NewCommandServer(command, commandService, logger)
	return commandServer, func() {
		cleanup()
	}, nil
}
